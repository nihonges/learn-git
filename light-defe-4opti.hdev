<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="17.12">
<procedure name="main">
<interface/>
<body>
<l>* dev_close_window ()</l>
<l>* dev_update_off ()</l>
<l>* read_image (Image,'C:/Users/nihon/Desktop/fehlstelle/firma/03-06-25_300dpi_bidirectional0-0.tif')</l>
<l>* get_image_size (Image, Width, Height)</l>
<l>* dev_open_window (0, 0, 1350, 1875, 'black', WindowHandle)</l>
<l>* dev_set_draw ('margin')</l>
<l>* dev_set_line_width (3)</l>
<l>* dev_set_colored (12)</l>
<c></c>
<l>* optimize_rft_speed (Width, Height, 'standard')</l>
<l>* Sigma1 := 10.0</l>
<l>* Sigma2 := 2.0</l>
<c></c>
<l>* gen_gauss_filter (GaussFilter1, Sigma1, Sigma1, 0, 'none', 'rft', Width, Height)</l>
<l>* gen_gauss_filter (GaussFilter2, Sigma2, Sigma2, 0, 'none', 'rft', Width, Height)</l>
<c></c>
<l>* sub_image (GaussFilter1, GaussFilter2, Filter, 1, 0)</l>
<c></c>
<l>* read_image (Image1,'C:/Users/nihon/Desktop/fehlstelle/firma/03-06-25_300dpi_bidirectional0-0.tif')</l>
<l>* rgb1_to_gray (Image1, GrayImage)</l>
<l>* invert_image (GrayImage, ImageInvert)</l>
<c></c>
<l>* rft_generic (ImageInvert, ImageFFT, 'to_freq', 'sqrt', 'complex', Width)</l>
<l>* convol_fft (ImageFFT, Filter, ImageConvol)</l>
<l>* rft_generic (ImageConvol, ImageFiltered, 'from_freq', 'n', 'real', Width)</l>
<c></c>
<l>* gen_rectangle1 (Rectangle, 20, 20, Height-30, Width-30)</l>
<l>* reduce_domain (ImageFiltered, Rectangle, ROI)</l>
<c></c>
<l>* median_image (ROI, ImageMedian, 'circle', 20, 'mirrored')</l>
<l>* smooth_image (ROI, ImageSmooth, 'gauss', 5)</l>
<c></c>
<l>* threshold (ROI, Region, -0.002, -0.0003)</l>
<c></c>
<l>* connection (Region, ConnectedRegions)</l>
<l>* dilation_circle (ConnectedRegions, RegionDilation, 3)</l>
<c></c>
<l>* fill_up (RegionDilation, RegionFillUp)</l>
<l>* select_shape (RegionDilation, SelectedRegions, 'area', 'and', 100, 5000)</l>
<c></c>
<l>* gen_contour_region_xld (SelectedRegions, Contours, 'border')</l>
<l>* fit_circle_contour_xld (Contours, 'atukey', -1, 2, 0, 5, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)</l>
<l>* gen_circle_contour_xld (ContCircle, Row, Column, Radius+20, 0, 6.28318, 'positive', 1)</l>
<c></c>
<l>* dev_display (Image)</l>
<l>* dev_display (ContCircle)</l>
<c></c>
<c>*second</c>
<l>dev_close_window ()</l>
<l>dev_update_off ()</l>
<l>read_image (Image,'C:/Users/nihon/Desktop/fehlstelle/firma/03-06-25_300dpi_bidirectional0-0.tif')</l>
<l>rgb1_to_gray (Image, GrayImageo)</l>
<l>get_image_size (GrayImageo, Width_ori, Height_ori)</l>
<l>gen_empty_obj (Images)</l>
<l>gen_empty_obj (Tiles)</l>
<l>gen_empty_obj (TilesLines)</l>
<c>*</c>
<l>NumCols := 2</l>
<l>NumRows := 2</l>
<l>PartWidth  := int(Width_ori / NumCols)</l>
<l>PartHeight := int(Height_ori / NumRows)</l>
<l>LastPartWidth  := Width_ori  - PartWidth * (NumCols-1)</l>
<l>LastPartHeight := Height_ori - PartHeight * (NumRows-1)</l>
<c></c>
<l>for RowIndex := 0 to NumRows-1 by 1</l>
<l>    for ColIndex := 0 to NumCols-1 by 1</l>
<l>        Row := RowIndex * PartHeight</l>
<l>        Col := ColIndex * PartWidth</l>
<l>        crop_part (GrayImageo, Part, Row, Col, PartWidth, PartHeight)</l>
<c>        </c>
<l>        get_image_size (Part, Width, Height)</l>
<l>        calculate_lines_gauss_parameters (2, [25,5], Sigma, Low, High)</l>
<l>        lines_gauss (Part, Lines, Sigma, Low, High, 'dark', 'true', 'gaussian', 'true')</l>
<c>        * 将子图 XLD 坐标平移到全图坐标系</c>
<l>        hom_mat2d_identity (HomMat2D)</l>
<l>        hom_mat2d_translate (HomMat2D, Col, Row, HomMat2DTrans)</l>
<l>        affine_trans_contour_xld (Lines, LinesGlobal, HomMat2DTrans)</l>
<c></c>
<c>        * 拼接所有 Lines</c>
<l>        concat_obj (TilesLines, LinesGlobal, TilesLines)</l>
<l>        concat_obj (Images, Part, Images)</l>
<l>        FileName := 'part_' + RowIndex$'d' + '_' + ColIndex$'d' + '.tif'</l>
<l>        write_image (Part, 'tiff', 0, FileName)</l>
<l>    endfor</l>
<l>endfor</l>
<c>*</c>
<l>count_obj (Images, N)</l>
<l>dev_open_window (0, 0, Width, Height, 'black', WindowHandle)</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (3)</l>
<c></c>
<l>dev_set_color ('green')</l>
<l>for i := 1 to N by 1</l>
<l>    select_obj (Images, Img, i)</l>
<c>    *</c>
<l>    get_image_size (Img, Width, Height)</l>
<c></c>
<l>    calculate_lines_gauss_parameters (2, [25,5], Sigma, Low, High)</l>
<l>    lines_gauss (Img, Lines, Sigma, Low, High, 'dark', 'true', 'gaussian', 'true')</l>
<c>    </c>
<l>    RowIndex := ((i-1) / NumCols)</l>
<l>    ColIndex :=  (i-1) % NumCols</l>
<l>    RowOffset := RowIndex * PartHeight</l>
<l>    ColOffset := ColIndex * PartWidth</l>
<l>    hom_mat2d_identity (HomMat2D)</l>
<l>    hom_mat2d_translate (HomMat2D, ColOffset, RowOffset, HomMat2DTrans)</l>
<l>    affine_trans_contour_xld (Lines, LinesGlobal, HomMat2DTrans)</l>
<c></c>
<c>    * 合并 XLD</c>
<l>    concat_obj (TilesLines, LinesGlobal, TilesLines)</l>
<l>    concat_obj (Tiles, Img, Tiles)</l>
<c>    *</c>
<l>endfor</l>
<c></c>
<c>*</c>
<l>tile_images (Tiles, TiledImage, NumCols, 'vertical')</l>
<l>dev_display (GrayImageo)</l>
<l>dev_display (TilesLines)</l>
<l>gen_region_contour_xld (TilesLines, TilesRegion, 'filled')</l>
<l>gen_contour_region_xld (TilesRegion, Contours, 'border')</l>
<l>* fit_circle_contour_xld (Contours, 'atukey', -1, 2, 0, 5, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)</l>
<l>* gen_circle_contour_xld (ContCircle, Row, Column, Radius+20, 0, 6.28318, 'positive', 1)</l>
<l>smallest_circle (TilesRegion, Row, Column, Radius)</l>
<l>gen_circle_contour_xld (ContCircle, Row, Column, Radius+10, 0, 6.28318, 'positive', 1)</l>
<l>dev_display (Image)</l>
<c></c>
<l>dev_display (ContCircle)</l>
<l>stop()</l>
<c>*end</c>
<l>sub_image (TiledImage, GrayImageo, ImageSub1, 3, 0)</l>
<l>gen_image_const (Result, 'byte', Width_ori, Height_ori)</l>
<l>PartIndex := 1</l>
<c></c>
<l>* for RowIndex := 0 to NumRows-1 by 1</l>
<l>*     for ColIndex := 0 to NumCols-1 by 1</l>
<l>*         select_obj (Images, Part, PartIndex)</l>
<l>*         Row := RowIndex * PartHeight</l>
<l>*         Col := ColIndex * PartWidth</l>
<l>*         paste_image (Part, Result, Result, Row, Col)</l>
<l>*         PartIndex := PartIndex + 1</l>
<l>*     endfor</l>
<l>* endfor</l>
<c>*</c>
<l>for RowIndex := 0 to 1 by 1</l>
<l>    for ColIndex := 0 to 1 by 1</l>
<l>        select_obj (Images, Part, PartIndex)</l>
<l>        Row := RowIndex * PartHeight</l>
<l>        Col := ColIndex * PartWidth</l>
<l>        gen_rectangle1 (R1, Row, Col, Row + PartHeight - 1, Col + PartWidth - 1)</l>
<l>        paint_region (R1, Part, Result,255, 'fill')</l>
<l>        PartIndex := PartIndex + 1</l>
<l>    endfor</l>
<l>endfor</l>
<c>*</c>
<l>dev_open_window (0, 0, 1350, 1875, 'black', WindowHandle)</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (3)</l>
<l>dev_set_colored (3)</l>
<c></c>
<l>read_image (Image1,'C:/Users/nihon/Desktop/fehlstelle/firma//03-06-25_300dpi_bidirectional0-0.tif')</l>
<l>rgb1_to_gray (Image1, GrayImage)</l>
<c></c>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (3)</l>
<l>dev_display (Image)</l>
<c></c>
<c></c>
<c>*search lines as Staub</c>
<l>calculate_lines_gauss_parameters (2, [25,5], Sigma, Low, High)</l>
<l>lines_gauss (GrayImage, Lines, Sigma, Low, High, 'dark', 'true', 'gaussian', 'true')</l>
<c>*</c>
<l>decompose3 (Image1, R, G, B)</l>
<l>rft_generic (GrayImage, ImageFFT, 'to_freq', 'none', 'complex', Width)</l>
<l>gen_gauss_filter (ImageGauss, 100, 100, 0, 'n', 'rft', Width, Height)</l>
<l>convol_fft (ImageFFT, ImageGauss, ImageConvol)</l>
<c></c>
<l>rft_generic (ImageConvol, ImageFFT1, 'from_freq', 'none', 'byte', Width)</l>
<c></c>
<l>sub_image (GrayImage, ImageFFT1, ImageSub, 2, 100)</l>
<c></c>
<l>threshold (ImageSub, Region, 70, 84)</l>
<l>connection (Region, ConnectedRegions)</l>
<l>dilation_rectangle1 (ConnectedRegions, RegionDilation1, 3, 3)</l>
<c></c>
<l>fill_up (RegionDilation1, RegionFillUp)</l>
<l>select_shape (RegionFillUp, SelectedRegions, 'area', 'and', 80, 5000)</l>
<c></c>
<l>gen_contour_region_xld (SelectedRegions, Contours, 'border')</l>
<l>fit_circle_contour_xld (Contours, 'atukey', -1, 2, 0, 5, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)</l>
<l>gen_circle_contour_xld (ContCircle, Row, Column, Radius+20, 0, 6.28318, 'positive', 1)</l>
<c></c>
<l>dev_display (Image)</l>
<c></c>
<l>dev_display (ContCircle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
